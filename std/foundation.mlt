vocab mlatu {
  intrinsic call (forall (R S : Stack) . R, (R -> S) -> S)
  intrinsic drop (forall A . A ->)
  intrinsic swap (forall A B . A, B -> B, A)
}

define call (forall (R S : Stack) . R, (R -> S) -> S) {
  _::mlatu::call
}

define drop (forall T . T ->) {
  _::mlatu::drop
}

define swap (forall A B . A, B -> B, A) {
  _::mlatu::swap
}

about call {
  docs {
    """
    Applies a closure to the stack.

    This denotes modus ponens: if we have a program state 'R...' and a closure
    '(R... -> S...)' as evidence that we can convert 'R...' to 'S...', then we
    can invoke the closure to produce the
    new state 'S...'.
    """
  }
}
