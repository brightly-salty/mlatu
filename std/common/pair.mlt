type Pair A B { case pair (A, B) }

define first (forall A B . Pair A B -> A) { unpair drop }

define flip (forall A B . Pair A B -> Pair B A) { unpair swap pair }

define map_pair (forall A B C D . Pair A B, (A -> C), (B -> D) -> Pair C D) {
  -> f, g;
  unpair -> a, b;
  (a f call) (b g call) pair
}

define second (forall A B . Pair A B -> B) { unpair swap drop }

define unpair (forall A B . Pair A B -> A, B) { match case pair {} }
