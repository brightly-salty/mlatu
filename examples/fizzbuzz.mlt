define divisible (nat, nat -> bool) {
  % 0 eq
}

define fizzbuzz (nat -> char list) {
  -> n;
  { n 5 divisible n 3 divisible }
  with (+fail)
  match
  | true {
    match | true { "FizzBuzz" } | false { "Fizz" }
  }
  | false {
    match | true { "Buzz" } | false { n show }
  }
}

define fizzbuzzes (nat, nat ->  <io>) {
  -> c, m;
  c fizzbuzz println match (c m lt) | true { c succ m fizzbuzzes } | false {}
}

1 100 fizzbuzzes
